 variables m0, m1, m2, n2 : nat   ; 

lemmas

addle                :  ⊦ m * n1 = m * m0 + n0 ∧ m ≠ 0 → m0 ≤ n1 ;
            used for : s, ls ;
             remarks : proved ;
addle-01             :  ⊦ m * n1 = m * m0 + n0 ∧ m ≠ 0 → ¬ n1 < m0 ;
            used for : s, ls ;
             remarks : proved, used ;
coef-01              :  ⊦ m * n + m0 * n = m1 * n + m2 * n ↔ ¬ ¬(m + m0 = m1 + m2 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used ;
coef-02              :  ⊦ m * n + m0 * n ≤ m1 * n + m2 * n ↔ ¬ ¬(m + m0 ≤ m1 + m2 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used ;
coef-03              :  ⊦ m * n + m0 * n < m1 * n + m2 * n ↔ ¬ ¬(m + m0 < m1 + m2 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used ;
coef-04              :  ⊦ m * n + m0 * n = m1 * n ↔ ¬ ¬(m + m0 = m1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-05              :  ⊦ m * n + m0 * n ≤ m1 * n ↔ ¬ ¬(m + m0 ≤ m1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-06              :  ⊦ m * n + m0 * n < m1 * n ↔ ¬ ¬(m + m0 < m1 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-07              :  ⊦ m * n ≤ m1 * n + m2 * n ↔ ¬ ¬(m ≤ m1 + m2 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-08              :  ⊦ m * n < m1 * n + m2 * n ↔ ¬ ¬(m < m1 + m2 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-09              :  ⊦ m * n + m0 * n = m1 * n + n ↔ ¬ ¬(m + m0 = m1 + 1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-10              :  ⊦ m * n + m0 * n ≤ m1 * n + n ↔ ¬ ¬(m + m0 ≤ m1 + 1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-11              :  ⊦ m * n + m0 * n < m1 * n + n ↔ ¬ ¬(m + m0 < m1 + 1 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-12              :  ⊦ m * n + n ≤ m1 * n + m2 * n ↔ ¬ ¬(m + 1 ≤ m1 + m2 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-13              :  ⊦ m * n + n < m1 * n + m2 * n ↔ ¬ ¬(m + 1 < m1 + m2 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
coef-14              :  ⊦ m * n + m0 * n = n ↔ ¬ ¬(m + m0 = 1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-15              :  ⊦ m * n + m0 * n ≤ n ↔ ¬ ¬(m + m0 ≤ 1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved ;
coef-16              :  ⊦ m * n + m0 * n < n ↔ ¬ ¬(m + m0 = 0 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used ;
coef-17              :  ⊦ m * n + n = m1 * n ↔ ¬ ¬(m + 1 = m1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-18              :  ⊦ m * n + n ≤ m1 * n ↔ ¬ ¬(m + 1 ≤ m1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-19              :  ⊦ m * n + n < m1 * n ↔ ¬ ¬(m + 1 < m1 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
coef-20              :  ⊦ m * n ≤ m1 * n + n ↔ ¬ ¬(m ≤ m1 + 1 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
coef-21              :  ⊦ m * n < m1 * n + n ↔ ¬ ¬(m < m1 + 1 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
coef-22              :  ⊦ n ≤ m1 * n + m2 * n ↔ ¬ ¬(1 ≤ m1 + m2 ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
coef-23              :  ⊦ n < m1 * n + m2 * n ↔ ¬ ¬(1 < m1 + m2 ∧ n ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
dist                 :  ⊦ m0 * (m + n) = m0 * m + m0 * n ;
            used for : ls ;
             remarks : proved, used, used by proved unit ;
dist-merge           :  ⊦ m0 * m + m0 * n = m0 * (m + n) ;
             remarks : proved, used by proved unit ;
dist-sub             :  ⊦ m0 ≤ m → (m - m0) * n = m * n - m0 * n ;
             remarks : proved, used by proved unit ;
dist-sub-01          :  ⊦ m ≠ 0 → m * n - n = (m - 1) * n ;
             remarks : proved, used by proved unit ;
dist-sub-02          :  ⊦ n * n0 ≤ m + n ∧ n0 ≠ 0 → m + n - n * n0 = m - (n0 - 1) * n ;
             remarks : proved ;
dist-sub-03          :  ⊦ n0 < n → n * m - n0 * m = (n - n0) * m ;
            used for : s, ls ;
             remarks : proved ;
dist-sub-04          :  ⊦ n0 ≤ n → n * m - n0 * m = (n - n0) * m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
eq                   :  ⊦ m0 ≠ 0 → (m * m0 = n * m0 ↔ m = n) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
eq-01                :  ⊦ m * n + n = m * n0 + n0 ↔ n = n0 ;
            used for : ls ;
             remarks : proved, used by proved unit ;
eq-same              :  ⊦ m * n = m ↔ ¬ ¬(m = 0 ∨ n = 1) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
ex-two               :  ⊦ (∃ n. m = 2 * n) ∨ (∃ n. m = 2 * n + 1) ;
             remarks : proved, used ;
four                 :  ⊦ m ≠ 3 ∧ m ≠ 2 ∧ m ≠ 1 ∧ m ≠ 0 → (m ≤ 4 ↔ m = 4) ;
            used for : s, ls ;
             remarks : proved ;
four-01              :  ⊦ m ≠ 2 ∧ m ≠ 1 ∧ m ≠ 0 → (m < 4 ↔ m = 3) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
le                   :  ⊦ m0 ≠ 0 → (m0 * m ≤ m0 * n ↔ m ≤ n) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
le-01                :  ⊦ m0 ≠ 0 → m ≤ m * m0 + n ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
le-02                :  ⊦ m0 ≠ 0 → m ≤ m * m0 ;
            used for : s, ls ;
             remarks : proved ;
le-03                :  ⊦ m * n + n ≤ m * n0 + n0 ↔ n ≤ n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
le-04                :  ⊦ m ≤ n → (n * n0 ≤ m ↔ n0 = 0 ∨ n0 = 1 ∧ m = n ∨ n = 0) ;
            used for : s, ls ;
             remarks : proved, used ;
le-05                :  ⊦ m < n → (n * n0 ≤ m ↔ n0 = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
le-num               : 0 ≠ m ⊦ (* m) * n ≤ m * n0 ↔ n ≤ n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
le-rew               :  ⊦ n * m ≤ m * n0 ↔ m = 0 ∨ n ≤ n0 ;
             remarks : proved ;
le-same              :  ⊦ m * n + n0 ≤ m ↔ n = 0 ∧ n0 ≤ m ∨ m = 0 ∧ n0 = 0 ∨ n = 1 ∧ n0 = 0 ;
             remarks : proved, used by proved unit ;
le-succ              :  ⊦ m * n ≤ m + 1 ↔ m = 0 ∨ m = 1 ∧ n ≤ 2 ∨ 2 ≤ m ∧ n < 2 ;
            used for : s, ls ;
             remarks : proved, used ;
le2-02               :  ⊦ 2 * n ≤ 1 ↔ n = 0 ;
            used for : s, ls ;
             remarks : proved ;
le2-03               :  ⊦ 1 ≤ 2 * n ↔ n ≠ 0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
le2-04               :  ⊦ 2 * n ≤ 2 * m + 1 ↔ n ≤ m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
leone                :  ⊦ n ≠ 0 → (m * n ≤ n ↔ m ≤ 1) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls                   :  ⊦ m0 * m < m0 * n ↔ m0 ≠ 0 ∧ m < n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls-01                :  ⊦ m0 * m < m ↔ m0 = 0 ∧ m ≠ 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls-02                :  ⊦ m0 ≠ 0 → (m0 * m < m0 * n ↔ m < n) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls-03                :  ⊦ m ≤ n ∧ m ≠ 0 → (n * n0 < m ↔ n0 = 0) ;
            used for : s, ls ;
             remarks : proved, used ;
ls-03-num            : m ≤ n, m ≠ 0 ⊦ (* n) * n0 < (* m) ↔ n0 = 0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
ls-04                :  ⊦ m0 ≠ 0 → (m0 < m0 * m ↔ 1 < m) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls-05                :  ⊦ m0 ≠ 0 ∧ m < n → m < n * m0 ;
            used for : s, ls ;
             remarks : proved ;
ls-06                :  ⊦ m < m0 ∧ n < n0 → m * n < m0 * n0 ;
            used for : ls ;
             remarks : proved, used ;
ls-07                :  ⊦ n0 < n → (n < m * n ↔ 1 < m) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
ls-08                :  ⊦ m * n + n0 < n ↔ m = 0 ∧ n0 < n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls-09                :  ⊦ m ≤ n ∧ m ≠ 0 → (m ≤ n * n0 ↔ n0 ≠ 0) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
ls-10                :  ⊦ m ≤ n ∧ n0 ≠ 0 → ¬ n * n0 < m ;
            used for : s, ls ;
             remarks : proved, used ;
ls2-02               :  ⊦ 2 * n < 1 ↔ n = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
ls2-03               :  ⊦ 1 < 2 * n ↔ n ≠ 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
lssucc               :  ⊦ (m + 1) * n < m * n + n0 ↔ n < n0 ;
            used for : s, ls ;
             remarks : proved ;
lssucc-01            :  ⊦ m + n < (m0 + 1) * n ↔ m < m0 * n ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
mod-ls               :  ⊦ m0 < m ∧ n ≤ n0 ∧ n2 < n0 ∧ n1 < n → m0 * n + n1 < m * n0 + n2 ;
            used for : s, ls ;
             remarks : proved, used ;
mod-neq              :  ⊦ m0 < m ∧ n0 < n ∧ n1 ≤ n → m0 * n + n0 ≠ m * n + m + n1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mod-neq-01           :  ⊦ m0 < m ∧ n ≤ n0 ∧ n2 < n0 ∧ n1 < n → m0 * n + n1 ≠ m * n0 + n2 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
mod-neq-02           :  ⊦ n0 < n ∧ n0 ≠ 0 → m * n ≠ m0 * n + n0 ;
            used for : ls ;
             remarks : proved, used ;
mod-neq-03           :  ⊦ n1 < n0 ∧ n0 < n ∧ n1 ≠ 0 → m0 * n + n0 + 1 ≠ m * n + n1 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
mod-neq-04           :  ⊦ n1 < n ∧ n0 < n ∧ n0 ≠ n1 → m0 * n + n0 ≠ m * n + n1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mod-neq-05           :  ⊦ n ≠ 0 → m * n + m ≠ m0 * n + m0 + n ;
            used for : s ;
             remarks : proved ;
mod-nle              :  ⊦ m0 < m ∧ n ≤ n0 ∧ n2 < n0 ∧ n1 < n → ¬ m * n0 + n2 ≤ m0 * n + n1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mod-nle-01           :  ⊦ n0 < m0 ∧ n ≤ m ∧ n0 ≠ 0 → ¬ m0 * m + n0 ≤ m0 * n ;
            used for : s, ls ;
             remarks : proved ;
mod-nls              :  ⊦ m0 < m ∧ n ≤ n0 ∧ n2 < n0 ∧ n1 < n → ¬ m * n0 + n2 < m0 * n + n1 ;
             remarks : proved ;
modeq                :  ⊦ n0 < n ∧ n1 < n → (m * n + n0 = m0 * n + n1 ↔ m = m0 ∧ n0 = n1) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
modeq-01             :  ⊦ n0 < n → (m * n + n0 = m0 * n ↔ m = m0 ∧ n0 = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
modls                :  ⊦ n0 < m0 → (m0 * m + n0 < m0 * n ↔ m < n) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
modls-01             :  ⊦ n ≤ n0 ∧ n2 < n0 ∧ m1 < m ∧ n1 < n → m1 * n + n1 < m * n0 + n2 ;
            used for : s, ls ;
             remarks : proved, used ;
modls-02             :  ⊦ n < n0 ∧ n2 < n0 ∧ m1 < m ∧ n1 < n → m1 * n + n1 < m * n0 + n2 ;
            used for : s, ls ;
             remarks : proved ;
modls-03             :  ⊦ n2 < n ∧ m1 < m ∧ n1 < n → m1 * n + n1 < m * n + n2 ;
            used for : s, ls ;
             remarks : proved, used ;
modp                 : n0 < m0, m0 * n ≤ m0 * m + n0 ⊦ n ≤ m ;
             remarks : proved, used ;
mult-a               :  ⊦ m0 * m * n = (m0 * m) * n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mult-c               :  ⊦ m * n = n * m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mult-eq-succ         :  ⊦ m < m1 → (m + 1 = m1 * m0 ↔ m0 = 1 ∧ m1 = m + 1) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mult-eq-succ-01      : 
⊦   m ≤ m1
  → (m + 1 = m1 * m0 ↔ m0 = 1 ∧ m1 = m + 1 ∨ m = 1 ∧ m0 = 2 ∧ m1 = 1) ;
            used for : s, ls ;
             remarks : proved ;
mult-eq-succ-02      :  ⊦ m1 + 1 = m1 * m0 ↔ m1 = 1 ∧ m0 = 2 ;
            used for : s, ls ;
             remarks : proved, used ;
mult-ineq-le         :  ⊦ n0 ≠ 0 → (n ≤ m ↔ n * n0 ≤ m * n0) ;
             remarks : proved ;
mult-ineq-lt         :  ⊦ n0 ≠ 0 → (n < m ↔ n * n0 < m * n0) ;
             remarks : proved ;
mult-le              :  ⊦ m1 * m0 ≤ m1 ↔ m1 = 0 ∨ m0 ≤ 1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
mult-le-01           :  ⊦ m ≤ n → (n * n ≤ m + 1 ↔ n ≤ 1 ∧ m ≤ 1) ;
            used for : s, ls ;
             remarks : proved ;
mult-sub-less        :  ⊦ m ≤ n0 → n * (n0 - m) = n0 * n - m * n ;
             remarks : proved, used by proved unit ;
neqone               :  ⊦ 1 < n → (m = m * n ↔ m = 0) ;
            used for : s, ls ;
             remarks : proved ;
nonumsimp-addls-01   :  ⊦ m * m0 + n0 < m * (n + m0) ↔ n0 < m * n ;
             remarks : proved, used by proved unit ;
nonumsimp-eqsucc     :  ⊦ m + n = m0 + (n0 + 1) * n ↔ m = m0 + n0 * n ;
             remarks : proved ;
nonumsimp-lstwo      :  ⊦ n0 + n < (m + 2) * n ↔ n0 < (m + 1) * n ;
             remarks : proved ;
nonumsimp-mod-neq    :  ⊦ m0 < m ∧ n0 < n ∧ n1 ≤ n → m0 * n + n0 ≠ m * (n + 1) + n1 ;
             remarks : proved ;
nonumsimp-mod-neq-05 :  ⊦ n ≠ 0 → m * (n + 1) ≠ m0 * (n + 1) + n ;
             remarks : proved ;
nonumsimp-succ       :  ⊦ m0 * m + m = (m0 + 1) * m ;
             remarks : proved, used by proved unit ;
nonumsimp-twoeq      :  ⊦ 2 * m + n = m + n0 ↔ m + n = n0 ;
             remarks : proved ;
nonumsimp-twoeq-01   :  ⊦ 2 * m + n = m ↔ m + n = 0 ;
             remarks : proved ;
nonumsimp-twole      :  ⊦ 2 * m + n ≤ m ↔ m = 0 ∧ n = 0 ;
             remarks : proved ;
nonumsimp-twols      :  ⊦ 2 * (m + 1) + n < 2 * m + n0 ↔ n + 2 < n0 ;
            used for : ls ;
             remarks : proved ;
nonumsimp-twonle     :  ⊦ m < n ∧ m0 ≤ n → ¬ 2 * n ≤ m + m0 ;
             remarks : proved ;
numeral-01           : m1 < m2 ⊦ (* m2) * m + n = (* m1) * m + n0 ↔ (m2 - m1) * m + n = n0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-03           : m1 < m2 ⊦ (* m2) * m + n ≤ (* m1) * m + n0 ↔ (m2 - m1) * m + n ≤ n0 ;
            used for : s, ls ;
             remarks : proved, used ;
numeral-04           : m2 < m1 ⊦ (* m2) * m + n ≤ (* m1) * m + n0 ↔ n ≤ (m1 - m2) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-05           : m1 < m2 ⊦ (* m2) * m + n < (* m1) * m + n0 ↔ (m2 - m1) * m + n < n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-06           : m2 < m1 ⊦ (* m2) * m + n < (* m1) * m + n0 ↔ n < (m1 - m2) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-07           : m1 < m2 ⊦ (* m2) * m = (* m1) * m + n0 ↔ (m2 - m1) * m = n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-08           : m2 < m1 ⊦ (* m2) * m = (* m1) * m + n0 ↔ (m1 - m2) * m + n0 = 0 ;
            used for : s, ls ;
             remarks : proved, used ;
numeral-09           : m1 < m2 ⊦ (* m2) * m ≤ (* m1) * m + n0 ↔ (m2 - m1) * m ≤ n0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-10           : m2 < m1 ⊦ (* m2) * m ≤ (* m1) * m + n0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-11           : m1 < m2 ⊦ (* m2) * m < (* m1) * m + n0 ↔ (m2 - m1) * m < n0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-12           : m2 < m1 ⊦ (* m2) * m < (* m1) * m + n0 ↔ (m1 - m2) * m + n0 ≠ 0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-15           : m1 < m2 ⊦ (* m2) * m + n ≤ (* m1) * m ↔ (m2 - m1) * m + n ≤ 0 ;
            used for : s, ls ;
             remarks : proved ;
numeral-16           : m2 < m1 ⊦ (* m2) * m + n ≤ (* m1) * m ↔ n ≤ (m1 - m2) * m ;
            used for : s, ls ;
             remarks : proved ;
numeral-17           : m1 < m2 ⊦ ¬ (* m2) * m + n < (* m1) * m ;
            used for : s, ls ;
             remarks : proved ;
numeral-18           : m2 < m1 ⊦ (* m2) * m + n < (* m1) * m ↔ n < (m1 - m2) * m ;
            used for : s, ls ;
             remarks : proved ;
numeral-19           : m2 ≠ 0 ⊦ (* m2) * m + n = m + n0 ↔ (m2 - 1) * m + n = n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-20           : m2 ≠ 0 ⊦ (* m2) * m + n ≤ m + n0 ↔ (m2 - 1) * m + n ≤ n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-21           : m2 ≠ 0 ⊦ (* m2) * m + n < m + n0 ↔ (m2 - 1) * m + n < n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-23           : m1 ≠ 0 ⊦ m + n ≤ (* m1) * m + n0 ↔ n ≤ (m1 - 1) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-24           : m1 ≠ 0 ⊦ m + n < (* m1) * m + n0 ↔ n < (m1 - 1) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-25           : m2 ≠ 0 ⊦ (* m2) * m = m + n0 ↔ (m2 - 1) * m = n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-26           : m2 ≠ 0 ⊦ (* m2) * m ≤ m + n0 ↔ (m2 - 1) * m ≤ n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-27           : m2 ≠ 0 ⊦ (* m2) * m < m + n0 ↔ (m2 - 1) * m < n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-28           : m1 ≠ 0 ⊦ m = (* m1) * m + n0 ↔ 0 = (m1 - 1) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-29           : m1 ≠ 0 ⊦ m ≤ (* m1) * m + n0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-30           : m1 ≠ 0 ⊦ m < (* m1) * m + n0 ↔ (m1 - 1) * m + n0 ≠ 0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-32           : m2 ≠ 0 ⊦ (* m2) * m + n ≤ m ↔ (m2 - 1) * m + n = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-33           : m2 ≠ 0 ⊦ ¬ (* m2) * m + n < m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
numeral-35           : m1 ≠ 0 ⊦ m + n ≤ (* m1) * m ↔ n ≤ (m1 - 1) * m ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
numeral-36           : m1 ≠ 0 ⊦ m + n < (* m1) * m ↔ n < (m1 - 1) * m ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
one                  :  ⊦ m0 * 1 = m0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
one-01               :  ⊦ m0 * m = 1 ↔ m0 = 1 ∧ m = 1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
one-02               :  ⊦ m0 ≠ 1 → (m0 * m = m ↔ m = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
rdist                :  ⊦ m0 * (* m) + m0 * (* n) = m0 * (m + n) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
rsucc                :  ⊦ m +1 * n = m * n + n ;
            used for : ls ;
             remarks : proved, used ;
rsucc-01             :  ⊦ (m + 1) * n = m * n + n ;
            used for : ls ;
             remarks : proved, used, used by proved unit ;
rsucc-02             :  ⊦ m * (n + 1) = m * n + m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
sqle                 :  ⊦ m0 ≠ 0 ∧ m * m ≤ m0 + 1 → m ≤ m0 * m0 ;
            used for : s, ls ;
             remarks : proved ;
sqle-01              :  ⊦ m * m ≤ n → m ≤ n ;
            used for : s, ls ;
             remarks : proved, used ;
sqle-02              :  ⊦ m * m ≤ n ∧ n ≤ n0 → m ≤ n0 ;
            used for : s, ls ;
             remarks : proved ;
sqls                 :  ⊦ m ≤ n → (m + 1 < n * n ↔ 1 < n) ;
            used for : s, ls ;
             remarks : proved, used ;
sqp                  : m0 ≠ 0, m0 ≠ 1, m0 * m0 ≤ m + 1 ⊦ m0 < m ;
             remarks : proved, used ;
sqr                  :  ⊦ m ≤ m * m ;
            used for : s, ls ;
             remarks : proved ;
sqr-01               :  ⊦ m < m * m ↔ 1 < m ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-02               :  ⊦ m + 1 ≤ m * m ↔ 1 < m ;
            used for : s, ls ;
             remarks : proved ;
sqr-03               :  ⊦ m + 1 < m * m ↔ 1 < m ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-05               :  ⊦ ¬ m * m < m ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-06               :  ⊦ m * m ≤ m ↔ m ≤ 1 ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-07               :  ⊦ m * m ≤ m + 1 ↔ m ≤ 1 ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-08               :  ⊦ m * m ≤ 2 ↔ m ≤ 1 ;
            used for : s, ls ;
             remarks : proved, used ;
sqr-09               :  ⊦ 2 < m ∧ m ≤ n → ¬ n * n ≤ m + 1 ;
            used for : s, ls ;
             remarks : proved ;
square-eq            :  ⊦ m * (m + 1) = n * (n + 1) ↔ m = n ;
            used for : s, ls ;
             remarks : proved, used ;
square-eq-01         :  ⊦ m * (m + 1) = (n + 1) * (n + 2) ↔ m = n + 1 ;
            used for : s, ls ;
             remarks : proved ;
square-eq-02         :  ⊦ m * (m + 2) = n * (n + 2) ↔ m = n ;
            used for : s, ls ;
             remarks : proved ;
square-eq-03         :  ⊦ m * (m + m0) = n * (n + m0) ↔ m = n ;
            used for : s, ls ;
             remarks : proved, used ;
square-even          :  ⊦ m * (m + 1) ≠ 2 * n + 1 ;
            used for : s, ls ;
             remarks : proved, used ;
square-even-01       :  ⊦ m * m + m ≠ 2 * n + 1 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
square-inject        : m * (m + 1) + 2 * m0 = n * (n + 1) + 2 * n0, m0 ≤ m, n0 ≤ n
⊦ m = n ∧ m0 = n0 ;
             remarks : proved, used by proved unit ;
square-interval      : m * (m + 1) ≤ n * (n + 1) + 2 * n0, 
n * (n + 1) + 2 * n0 < (m + 1) * (m + 2), n0 ≤ n
⊦ m = n ;
             remarks : proved, used, used by proved unit ;
square-le            :  ⊦ m * (m + 1) ≤ n * (n + 1) ↔ m ≤ n ;
            used for : s, ls ;
             remarks : proved, used ;
square-le-01         :  ⊦ m * (m + 1) ≤ (n + 1) * (n + 2) ↔ m ≤ n + 1 ;
            used for : s, ls ;
             remarks : proved ;
square-le-02         :  ⊦ m * m ≤ n * n ↔ m ≤ n ;
            used for : s, ls ;
             remarks : proved, used ;
square-le-03         :  ⊦ m * (m + m0) ≤ n * (n + m0) ↔ m ≤ n ;
            used for : s, ls ;
             remarks : proved ;
square-less          :  ⊦ m * m < n * n ↔ m < n ;
            used for : s, ls ;
             remarks : proved, used ;
square-ls            :  ⊦ m * (m + 1) < n * (n + 1) ↔ m < n ;
             remarks : proved, used, used by proved unit ;
square-ls-01         :  ⊦ m ≠ 0 → ¬ m * (m + 1) < 2 ;
            used for : s, ls ;
             remarks : proved ;
square-ls-02         :  ⊦ m * (m + 1) < (n + 1) * (n + 2) ↔ m < n + 1 ;
            used for : s, ls ;
             remarks : proved ;
square-ls-03         :  ⊦ m * (m + 2) < n * (n + 2) ↔ m < n ;
            used for : s, ls ;
             remarks : proved ;
square-ls-04         :  ⊦ m0 ≤ 2 * m → (m * m + m0 < n * n ↔ m < n) ;
            used for : s, ls ;
             remarks : proved ;
square-ls-05         :  ⊦ m * (m + m0) < n * (n + m0) ↔ m < n ;
            used for : s, ls ;
             remarks : proved, used ;
square-one           :  ⊦ m * m + m ≠ 1 ;
            used for : s, ls ;
             remarks : proved ;
square-two           :  ⊦ m ≤ n → (n * n + n = m * 2 ↔ ¬ ¬(n = m ∧ n < 2)) ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
sqzero               :  ⊦ m * m = 0 ↔ m = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
succ                 :  ⊦ (* m0) * m + m = (m0 + 1) * m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
succ-01              :  ⊦ m ≠ 1 → m * n0 ≠ m * m0 + 1 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
succ-merge           :  ⊦ m * n + m = m * (n + 1) ;
             remarks : proved, used by proved unit ;
three                :  ⊦ m ≠ 1 → (m * m0 = 3 ↔ m = 3 ∧ m0 = 1) ;
            used for : s, ls ;
             remarks : proved ;
threeeq              :  ⊦ 3 ≠ 2 * n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
threels              :  ⊦ 3 < 2 * n ↔ 1 < n ;
            used for : s, ls ;
             remarks : proved ;
two-02               :  ⊦ m + m = 2 * m ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
two-03               :  ⊦ m ≠ 1 → (m * m0 = 2 ↔ m = 2 ∧ m0 = 1) ;
            used for : s, ls ;
             remarks : proved ;
two-les-01           :  ⊦ n ≤ 2 * n + 1 ;
            used for : s, ls ;
             remarks : proved ;
two-ls-01            :  ⊦ 2 * m < 2 * n ↔ m < n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
two-one-01           :  ⊦ 2 * m ≠ 1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
two-succ-03          :  ⊦ 2 * (m + 1) = n + 1 ↔ 2 * m + 1 = n ;
            used for : s, ls ;
             remarks : proved ;
two-succ-04          :  ⊦ 2 * m + 1 < 2 * n ↔ m < n ;
            used for : s, ls ;
             remarks : proved ;
two-succ-05          :  ⊦ 2 * m ≠ 2 * n + 1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
two-succ-06          :  ⊦ 2 * m = 2 * n + m0 → ¬ m < n ;
            used for : s, ls ;
             remarks : proved ;
two-zero-01          :  ⊦ 2 * m = 0 ↔ m = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
twoeq                :  ⊦ 2 = 2 * n ↔ n = 1 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
twoeqf               :  ⊦ m + m0 = 2 * n ∧ n < m → m0 < n ;
            used for : f, lf ;
             remarks : proved, used, used by proved unit ;
twoeqf-01            :  ⊦ m + m0 = 2 * n ∧ m < n → n < m0 ;
            used for : f, lf ;
             remarks : proved, used, used by proved unit ;
twoeqf-02            :  ⊦ m + m0 = 2 * n + 1 ∧ n < m → m0 ≤ n ;
            used for : f, lf ;
             remarks : proved, used by proved unit ;
twoeqf-03            :  ⊦ m + m0 = 2 * n + 1 ∧ m < n → n + 1 < m0 ;
            used for : f, lf ;
             remarks : proved, used by proved unit ;
twole                :  ⊦ 2 * n ≤ n ↔ n = 0 ;
            used for : s, ls ;
             remarks : proved ;
twole-01             :  ⊦ 2 ≤ 2 * n ↔ n ≠ 0 ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
twole-02             :  ⊦ m ≤ 2 * m ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
twols                :  ⊦ ¬ 2 * n < n ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
twols-01             :  ⊦ 2 < 2 * n ↔ 1 < n ;
            used for : s, ls ;
             remarks : proved, used by proved unit ;
zero                 :  ⊦ 0 * n = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
zero-01              :  ⊦ m0 * m = 0 ↔ m0 = 0 ∨ m = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
zero-02              :  ⊦ m * n = m * n0 ↔ m = 0 ∨ n = n0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
zero-03              :  ⊦ m * n = m ↔ m = 0 ∨ n = 1 ;
            used for : s, ls ;
             remarks : proved, used ;
zero-04              :  ⊦ m * n = m0 → (m0 = m * n0 ↔ m = 0 ∨ n = n0) ;
             remarks : proved ;
zero-05              :  ⊦ (m + 1) * n = 0 ↔ n = 0 ;
            used for : s ;
             remarks : proved ;
zero-06              :  ⊦ m ≠ 0 → (m * n = 0 ↔ n = 0) ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;
zero-num             : 0 ≠ m ⊦ (* m) * n = 0 ↔ n = 0 ;
            used for : s, ls ;
             remarks : proved, used, used by proved unit ;


;;; END

