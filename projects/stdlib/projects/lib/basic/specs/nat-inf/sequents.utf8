
lemmas

fin-inject-embed: n∞ ≠ ∞ ⊦ ⌜n∞ .n⌝ = n∞; used for : s, ls;

notinf-fin: n∞ = ∞ ↔ ¬ ∃ n. n∞ = ⌜n⌝;
notinf-fin-sym: ∞ = n∞ ↔ ¬ ∃ n. n∞ = ⌜n⌝;

less-succ-leq:
⌜n⌝  < ⌜1⌝  + n∞ ↔  ¬ n∞ < ⌜n⌝;
used for: s,ls;


eqsum-notless:
n∞ = ⌜n⌝ + ⌜m⌝ → (⌜n1⌝  + ⌜m⌝  < n∞ ↔ n1 < n);
used for: ss,lss;

less-less-leftsucc:
n∞ < n∞0 → (n∞ + ⌜1⌝ < n∞0 ↔ ¬ (n∞ + ⌜1⌝ = n∞0 ∧ n∞ ≠ ∞));
used for: ss,lss;

min-inf1: min(∞,n∞) = n∞;
min-inf2: min(n∞,∞) = n∞;


less-notgeqinf: m < n → (⌜n⌝ + n∞ < ⌜m⌝ ↔ false);
used for: s,ls;

inf-inseq-reduce:
n∞ = ⌜m⌝ + ⌜n0⌝ → (⌜n⌝ < n∞ ↔ n < m + n0);
used for: s,ls;

(: sollte aus inf-inseq-reduce folgen
ls-suc:
m < n ∧ n∞ = ⌜m⌝ + ⌜1⌝ → (¬ ¬ ⌜n⌝ < n∞ ↔ false);
:)



(: ???? fuehrt zu Endlosschleifen used, e.g. when # σ = ⌜m⌝ + ⌜n⌝ :)
rem-seln-on-add: n∞ = ⌜m⌝ + ⌜n⌝ → n∞.n = m + n;
;;;used for: s,ls;

ls-notlssucc: ⌜m⌝  < n∞ → (⌜m⌝ + ⌜1⌝  < n∞ ↔ ⌜m⌝ + ⌜1⌝  ≠ n∞);
used for: ss,lss;


sum-notinf:  n∞ = ⌜m⌝ + ⌜n⌝ → (n∞ = ∞ ↔ false);
used for: s,ls;


ls-lsadd: m < n → ⌜m⌝  < ⌜n⌝  + n∞0;
used for: s,ls;

leq-notgradd: m ≤ n → (⌜n⌝  + n∞0 < ⌜m⌝  ↔ false);
used for: s,ls;


zerols-neqzero: ⌜0⌝ < n∞ ↔ n∞ ≠ ⌜0⌝;
used for: s,ls;

onels-neqzero: ⌜1⌝ < n∞ ↔ (n∞ ≠ ⌜0⌝ ∧ n∞ ≠ ⌜1⌝);
used for: s,ls;

eqls-succ: n∞0 + ⌜1⌝  = n∞ → (⌜n⌝  + ⌜1⌝  < n∞ ↔ ⌜n⌝  < n∞0);
used for: s,ls;

eqls-ls-notls:
n∞ = n∞0 + ⌜1⌝ ∧  ⌜n⌝  < n∞0 → (⌜n⌝  < n∞ ↔ true);
used for: ss,lss;

eqsucc-notls:
n∞0 + ⌜1⌝  = n∞ → (n∞ < n∞0 ↔ false);
used for: s,ls;

eqsucc-ls:
n∞0 + ⌜1⌝  = n∞ → (n∞0 < n∞ ↔ n∞0 ≠ ∞);
used for: ss,lss;


ls-succ-01: ⊦ n∞ < ⌜n⌝ + ⌜1⌝ ↔ ¬ ⌜n⌝ < n∞ ; used for: s, ls;
ls-one: n∞ < ⌜1⌝ ↔ n∞ = ⌜0⌝; used for: s,ls;

num-add : ⌜(* n)⌝ + ⌜(* m)⌝ = ⌜n + m⌝; used for: s,ls;
prime-add-fin: n∞ ≠ ∞ ⊦ (⌜m⌝ + n∞) .n = m + n∞.n; used for: s, ls;

ls-le : ⊦ n∞ < n∞0 → ¬ n∞0 < n∞; used for: s,ls;

eq-natinf-to-nat-2-1: ⌜n⌝ + ⌜m⌝ = ⌜n0⌝ ↔ n + m = n0;used for: s,ls;
eq-natinf-to-nat-3-1: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ = ⌜n0⌝ ↔ n1 + n + m = n0;used for: s,ls;
eq-natinf-to-nat-2-2: ⌜n⌝ + ⌜m⌝ = ⌜n0⌝ + ⌜n1⌝ ↔ n + m = n0 + n1;used for: s,ls;
eq-natinf-to-nat-3-2: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ = ⌜n0⌝ + ⌜n2⌝ ↔ n1 + n + m = n0 + n2;used for: s,ls;
eq-natinf-to-nat-3-3: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ = ⌜n2⌝ + ⌜n0⌝ + ⌜n2⌝ ↔ n1 + n + m = n2 + n0 + n2;used for: s,ls;


;; eklig
ls-natinf-to-nat-2-1: ⌜n⌝ + ⌜m⌝ < ⌜n0⌝ ↔ n + m < n0;used for: s,ls;
ls-natinf-to-nat-1-2: ⌜n⌝  < ⌜m⌝ + ⌜n0⌝ ↔ n < m + n0;used for: s,ls;
ls-natinf-to-nat-2-2: ⌜n⌝ + ⌜m⌝ < ⌜n0⌝ + ⌜n1⌝ ↔ n + m < n0 + n1;used for: s,ls;
ls-natinf-to-nat-3-2: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ < ⌜n0⌝ + ⌜n2⌝ ↔ n1 + n + m < n0 + n2;used for: s,ls;
ls-natinf-to-nat-3-1: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ < ⌜n0⌝ ↔ n1 + n + m < n0;used for: s,ls;
ls-natinf-to-nat-2-3: ⌜n1⌝ + ⌜n⌝  < ⌜n0⌝ + ⌜n2⌝ + ⌜m⌝ ↔ n1 + n < n0 + n2 + m;used for: s,ls;
ls-natinf-to-nat-1-3: ⌜n1⌝ < ⌜n0⌝ + ⌜n⌝ + ⌜m⌝ ↔ n1 < n0 + n + m;used for: s,ls;
ls-natinf-to-nat-3-3: ⌜n1⌝ + ⌜n⌝ + ⌜m⌝ < ⌜n2⌝ + ⌜n0⌝ + ⌜n2⌝ ↔ n1 + n + m < n2 + n0 + n2;used for: s,ls;



;; damit acmatch gut funktioniert, darf die Gleichung nicht andersrum formuliert werden!
ls-succ: ⊦ n∞ < ⌜n + 1⌝ ↔ ¬ ⌜n⌝ < n∞ ; used for: s, ls;

sum-zero : n∞ + n∞1 = ⌜0⌝ ↔ n∞ = ⌜0⌝ ∧ n∞1 = ⌜0⌝;
used for : ls, s;
sum-zero-fin : ⌜n⌝ + n∞ = ⌜0⌝ ↔ n∞ = ⌜0⌝ ∧ n = 0;
used for : ls, s;


not-less-zero : ¬ n∞ < ⌜0⌝; used for : s,ls;
addeqinf-cancel: ⌜m⌝ + n∞ = ∞ ↔  n∞ = ∞; used for : s,ls;

inf-less: n∞ < ∞ ↔  n∞ ≠ ∞; used for : s, ls;

add-not-less : ¬ n∞ + n∞1 < n∞1; used for : s,ls;
add-less-fin-01 : ⌜n⌝ < n∞ + ⌜n⌝ ↔ n∞ ≠ ⌜0⌝;used for : s,ls;
add-less : n∞1 < n∞ + n∞1 ↔ (n∞ ≠ ⌜0⌝ ∧ n∞1 ≠ ∞); used for : s,ls;


ls-trans : n∞ < n∞1 ∧ n∞1 < n∞2 → n∞ < n∞2; used for : f,lf;
lsle-trans : n∞ < n∞1 ∧ ¬ n∞2 < n∞1 → n∞ < n∞2; used for : f,lf;
lele-trans : ¬ n∞1 < n∞ ∧ ¬ n∞2 < n∞1 → ¬ n∞2 < n∞; used for : f,lf;
lels-trans : ¬ n∞1 < n∞ ∧ n∞1 < n∞2 → n∞ < n∞2; used for : f,lf;
ls-irref : ¬ n∞ < n∞; used for : s,ls;
lele-refl : ¬ n∞1 < n∞ → (n∞ < n∞1 ↔ n∞ ≠ n∞1) ; used for : ss,lss;

add-all-inf: n∞ + ∞ = ∞ ; used for : ls, s;
add-all-zero: n∞ + ⌜0⌝ = n∞ ; used for : ls, s;
add-inf-01: (n∞ + n∞1) = ∞ ↔ (n∞ = ∞ ∨ n∞1 = ∞); used for: s,ls;
add-inf-02: (⌜n⌝ + n∞1) = ∞ ↔ n∞1 = ∞; used for: s,ls;

add-assoc : (n∞ + n∞1) + n∞2 = n∞ + n∞1 + n∞2; used for : s,ls;
add-comm : n∞1 + n∞2 = n∞2 + n∞1;used for : s,ls;



add-cancel-02 : n∞1 = n∞1 + n∞2 ↔ (n∞1 = ∞ ∨ n∞2 = ⌜0⌝);used for: s, ls;
add-cancel-01 : ⌜n⌝ + n∞1 = ⌜n⌝ + n∞2 ↔ n∞1 = n∞2; used for: s, ls;
add-cancel-03 : ⌜n⌝ + n∞ = ⌜n⌝ ↔ n∞ = ⌜0⌝;used for: s, ls;


add-cancel-num-01 : m ≤ n → (⌜*(n)⌝  = ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m)⌝ = n∞2);
used for : ls, s;
add-cancel-num-02 : n < m → (⌜*(n)⌝  = ⌜*(m)⌝ + n∞2 ↔ false);
used for : ls, s;
add-cancel-num-03 : m ≤ n → (⌜*(n)⌝ + n∞1 = ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m)⌝ + n∞1 = n∞2);
used for : ls, s;
add-cancel-num-04 : n < m → (⌜*(n)⌝ + n∞1 = ⌜*(m)⌝ + n∞2 ↔ n∞1 = ⌜(m - n)⌝ + n∞2);
used for : ls, s;



add-ls-cancel-01: ⌜n⌝ + n∞1 < ⌜n⌝ + n∞2 ↔ n∞1 < n∞2; used for: s,ls;

add-ls-cancel-num-01 : m ≤ n → (⌜*(n)⌝  < ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m)⌝ < n∞2);
used for : ls, s;
add-ls-cancel-num-02 : m ≤ n → (⌜*(n)⌝ + n∞1 < ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m)⌝ + n∞1 < n∞2);
used for : ls, s;
add-ls-cancel-num-03 : m ≤ n → (⌜*(m)⌝ + n∞2 < ⌜*(n)⌝  ↔ n∞2 < ⌜(n - m)⌝);
used for : ls, s;
add-ls-cancel-num-04 : m ≤ n → (⌜*(m)⌝ + n∞2 < ⌜*(n)⌝ + n∞1 ↔ n∞2 < ⌜(n - m)⌝ + n∞1);
used for : ls, s;


;;; END


;; ausgesondert nach quine-rein -> quine-raus Δnderung

add-cancel-num-1 : false ⊦ m ≤ n → (⌜*(n) + n0⌝  = ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m) + n0⌝ = n∞2);
add-cancel-num-2 : false ⊦  n < m → (⌜*(n) + n0⌝  = ⌜*(m)⌝ + n∞2 ↔ ⌜n0⌝  = ⌜m - n⌝ + n∞2);
add-ls-cancel-num-1a : false ⊦ m ≤ n → (⌜*(n) + n0⌝  < ⌜*(m)⌝ + n∞2 ↔ ⌜(n - m) + n0⌝ < n∞2);
add-ls-cancel-num-2a : false ⊦ n < m → (⌜*(n) + n0⌝  < ⌜*(m)⌝ + n∞2 ↔ ⌜n0⌝  < ⌜m - n⌝ + n∞2);
add-ls-cancel-num-1b : false ⊦ m ≤ n → (⌜*(m)⌝ + n∞2 < ⌜*(n) + n0⌝   ↔ n∞2 < ⌜(n - m) + n0⌝ );
add-ls-cancel-num-2b : false ⊦ n < m → ( ⌜*(m)⌝ + n∞2 < ⌜*(n) + n0⌝ ↔ ⌜m - n⌝ + n∞2 < ⌜n0⌝);
add-cancel-01: false ⊦ ⌜m + n⌝ < ⌜m⌝ + n∞ ↔ ⌜n⌝ < n∞; 
