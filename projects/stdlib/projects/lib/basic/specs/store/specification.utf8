;;;****************************************************************************************
;;;
;;; This file contains a generic specification
;;;
;;;****************************************************************************************

generic specification

       parameter elemdata
       
       using nat

       target

sorts store; 
     
constants ∅ : store;
     
functions

  
     
	. [ . ] : store × elem × data → store;

           # . : store → nat;

        . -- . : store × elem → store prio 9 left;



predicates 

       . ∈ . :     elem × store;
       . ⊆ . :    store × store;
     
variables st, st0, st1, st2 : store; 

partial functions
	. [ . ] : store × elem → data with λ st, a. a ∈ st;


induction store generated by ∅, [ ] (: :: (store × elem × data → store):);
          
     
axioms
     
Extension : st1 = st2 ↔ ∀ a. (a ∈ st1 ↔ a ∈ st2) ∧ st1[a] = st2[a]; used for : ls,nokodkodax;

In-empty : ¬ a ∈ ∅; used for : s,ls;
In-insert : a ∈ st[b, d] ↔ a = b ∨ a ∈ st; used for : s,ls;

At-same  : st[a, d][a] = d; used for : s,ls,nokodkodax;
At-other : a ≠ b → st[b, d][a] = st[a]; used for : s,ls;



Subset : st1 ⊆ st2 ↔ ∀ a. a ∈ st1 → a ∈ st2 ∧ st1[a] = st2[a]; used for : ls;

Size-empty : #(∅) = 0; used for : s,ls;

Size-insert : ¬ a ∈ st → # st[a, d] = #(st) + 1; used for : s,ls;

;; was called empty-01 previously
Del-empty      :  ⊦ ∅ -- a = ∅ ; used for : s,ls;

;; was called insert previously
Del-rec-same: st[a,d] -- a = st -- a; used for : s, ls, nokodkodax;

;;delete-put-rew ist dasselbe, nur verdrehte Gleichung
;; was called sw previously
;; keine der beiden Richtungen scheint simprule zu sein
Del-rec-other: a ≠ b → (st[b, d]) -- a = ((st -- a)[b, d]); used for : nokodkodax;
               

end generic specification
